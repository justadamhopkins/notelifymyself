// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Layout/> Should render component 1`] = `
<Layout
  addCategoryEle={[MockFunction]}
  category={
    Object {
      "111": Object {
        "_id": 111,
        "category": "Nature",
      },
    }
  }
>
  <Sidedraw
    addCategory={[Function]}
    categoryList={
      Object {
        "111": Object {
          "_id": 111,
          "category": "Nature",
        },
      }
    }
    isVisible={false}
  >
    <div
      className="Sidedraw close"
    >
      <Category
        addCategory={[Function]}
      >
        <ReactFinalForm
          initialValues={Object {}}
          onSubmit={[Function]}
          validate={[Function]}
        >
          <form
            className="Category"
            onSubmit={[Function]}
          >
            <div>
              <Field
                component={[Function]}
                label=""
                name="category"
                type="text"
              >
                <Input
                  input={
                    Object {
                      "name": "category",
                      "onBlur": [Function],
                      "onChange": [Function],
                      "onFocus": [Function],
                      "type": "text",
                      "value": "",
                    }
                  }
                  label=""
                  meta={
                    Object {
                      "active": false,
                      "data": Object {},
                      "dirty": false,
                      "dirtySinceLastSubmit": false,
                      "error": undefined,
                      "initial": undefined,
                      "invalid": false,
                      "length": undefined,
                      "modified": false,
                      "pristine": true,
                      "submitError": undefined,
                      "submitFailed": false,
                      "submitSucceeded": false,
                      "submitting": false,
                      "touched": false,
                      "valid": true,
                      "validating": false,
                      "visited": false,
                    }
                  }
                >
                  <div>
                    <label />
                    <input
                      name="category"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="category"
                      type="text"
                      value=""
                    />
                  </div>
                </Input>
              </Field>
              <Button
                buttonCopy="Add Category"
                buttonState="category"
                type="submit"
              >
                <button
                  className="Button category"
                  type="submit"
                >
                  Add Category
                </button>
              </Button>
            </div>
          </form>
        </ReactFinalForm>
      </Category>
      <NavigationItems
        categoryList={
          Object {
            "111": Object {
              "_id": 111,
              "category": "Nature",
            },
          }
        }
      >
        <ul
          className="NavigationItems"
        >
          <NavigationItem
            key="111"
            listItem="Nature"
          >
            <li>
              <ForwardRef
                to="/category/Nature"
              >
                <Location>
                  <LocationProvider
                    history={
                      Object {
                        "_onTransitionComplete": [Function],
                        "listen": [Function],
                        "location": Object {
                          "assign": [Function],
                          "hash": "",
                          "host": "localhost",
                          "hostname": "localhost",
                          "href": "http://localhost/",
                          "key": "initial",
                          "origin": "http://localhost",
                          "pathname": "/",
                          "port": "",
                          "protocol": "http:",
                          "reload": [Function],
                          "replace": [Function],
                          "search": "",
                          "state": null,
                          "toString": [Function],
                        },
                        "navigate": [Function],
                        "transitioning": false,
                      }
                    }
                  >
                    <a
                      href="/category/Nature"
                      onClick={[Function]}
                    >
                      Nature
                    </a>
                  </LocationProvider>
                </Location>
              </ForwardRef>
            </li>
          </NavigationItem>
        </ul>
      </NavigationItems>
    </div>
  </Sidedraw>
  <Wrapper
    isVisible={false}
    toggleSideDraw={[Function]}
  >
    <div
      className="Wrapper close"
    >
      <Header
        isVisible={false}
        sideDrawToggle={[Function]}
      >
        <header
          className="Header"
        >
          <Hamburger
            animateHamBurger={false}
            toggleSideDraw={[Function]}
          >
            <div
              className="Hamburger "
              onClick={[Function]}
            >
              <div
                className="bar1"
              />
              <div
                className="bar2"
              />
              <div
                className="bar3"
              />
            </div>
          </Hamburger>
        </header>
      </Header>
      <main />
    </div>
  </Wrapper>
</Layout>
`;
